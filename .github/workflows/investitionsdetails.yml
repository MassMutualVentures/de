name: Investitionsdetails Sync (Issues → JSON)

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write

# 避免并发两个工作流同时改同一个 JSON
concurrency:
  group: investitionsdetails-json
  cancel-in-progress: false

env:
  BRANCH: ${{ github.event.repository.default_branch }} # 自动用仓库默认分支（一般是 main）

jobs:
  sync:
    if: contains(join(fromJson(toJson(github.event.issue.labels))[*].name, ','), 'reco-')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0            # 允许 rebase
          persist-credentials: true

      # 先拉取远端最新，避免 non-fast-forward
      - name: Pull latest (rebase)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "$BRANCH" || true

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Handle issue -> update JSON
        run: node backend/handle-issue.mjs

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ env.BRANCH }}                 # 推回默认分支
          commit_message: "chore(investitionsdetails): sync from issue #${{ github.event.issue.number }}"
          file_pattern: |
            investitionsdetails/data/recommendations.json
            backend/.result.md
          push_options: '--force-with-lease'        # 万一又被抢先提交，安全强推

      - name: Comment & Close
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary='(no summary)';
            try { summary = fs.readFileSync('backend/.result.md','utf8'); } catch {}
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary
            });
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: 'closed'
            });
